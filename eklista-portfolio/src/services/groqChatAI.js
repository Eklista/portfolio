// src/services/groqChatAI.js
import { projectTypes, calculateTotalPrice, formatPrice } from '../data/pricing.js';
import { explorerStructure, projectsData } from '../data/projects.js';

class EklistaChatAI {
  constructor() {
    this.isInitialized = false;
    this.groq = null;
    this.initializeGroq();
  }

  async initializeGroq() {
    try {
      // Importaci√≥n din√°mica para evitar errores de SSR
      const { Groq } = await import('groq-sdk');
      this.groq = new Groq({
        apiKey: import.meta.env.VITE_GROQ_API_KEY,
        dangerouslyAllowBrowser: true // Para uso en frontend
      });
      this.isInitialized = true;
      console.log('‚úÖ Groq inicializado correctamente');
    } catch (error) {
      console.warn('‚ö†Ô∏è Groq no disponible, usando respuestas predefinidas');
      this.isInitialized = false;
    }
  }

  buildSystemPrompt() {
    const portfolioSummary = {
      servicios: projectTypes.map(pt => ({
        nombre: pt.name,
        descripcion: pt.description,
        precio_base: formatPrice(pt.basePrice)
      })),
      proyectos_destacados: [
        'Banking Web App - FinTech Guatemala (2024)',
        'E-commerce Platform - Fashion Forward (2024)', 
        'Restaurant Digital Experience - Sabor Aut√©ntico (2023)'
      ],
      habilidades: ['React', 'Next.js', 'WordPress', 'Figma', 'UX/UI Design'],
      ubicacion: 'Guatemala City, Guatemala',
      experiencia: '5+ a√±os, 50+ proyectos completados'
    };

    return `Eres Pablo (EKLISTA), un dise√±ador web y desarrollador guatemalteco. Act√∫as como un consultor amigable que ayuda a los clientes a entender sus necesidades y encontrar la mejor soluci√≥n.

INFORMACI√ìN SOBRE TI:
${JSON.stringify(portfolioSummary, null, 2)}

PERSONALIDAD:
- Conversacional y consultivo, no rob√≥tico
- Haces preguntas para entender mejor las necesidades del cliente
- Educas al cliente sobre las opciones disponibles
- Guatemalteco profesional pero cercano
- Usas ejemplos espec√≠ficos de tus proyectos cuando es relevante

FILOSOF√çA DE CONVERSACI√ìN:
1. ESCUCHA primero - haz preguntas para entender qu√© necesita el cliente
2. EDUCA - explica las opciones y diferencias entre servicios
3. RECOMIENDA - sugiere la mejor soluci√≥n basada en sus necesidades
4. GU√çA - lleva al cliente paso a paso hacia la decisi√≥n correcta

REGLAS DE CONVERSACI√ìN:
- NO menciones el cotizador inmediatamente - primero entiende qu√© necesita
- HAZ preguntas de seguimiento para clarificar necesidades
- USA ejemplos de tus proyectos cuando sea relevante al caso del cliente
- MENCIONA precios solo cuando el cliente los pregunte directamente
- MANT√âN la conversaci√≥n fluida y natural
- TERMINA con preguntas que hagan avanzar la conversaci√≥n

EJEMPLOS DE FLOW CONVERSACIONAL:

Cliente: "Necesito una p√°gina web"
T√ö: "¬°Perfecto! Me encanta ayudar con proyectos web. Para poder recomendarte la mejor soluci√≥n, cu√©ntame un poco m√°s: ¬øes para tu negocio personal, una empresa, o qu√© tipo de proyecto tienes en mente?"

Cliente: "¬øCu√°nto cuesta?"
T√ö: "Los precios var√≠an bastante seg√∫n lo que necesites. Por ejemplo, un sitio b√°sico de WordPress puede empezar desde Q1,200, pero una aplicaci√≥n web custom puede ser Q4,000+. ¬øQu√© tipo de funcionalidades tienes en mente? ¬øEs m√°s informativo, necesitas ventas online, o algo m√°s espec√≠fico?"

NUNCA respondas como FAQ - siempre mant√©n el tono conversacional y haz seguimiento.`;
  }

  // Respuestas r√°pidas para consultas comunes
  getQuickResponse(message) {
    const msg = message.toLowerCase().trim();
    
    // Saludos - m√°s conversacional
    if (msg.includes('hola') || msg.includes('hello') || msg.includes('hi') || msg === 'hey') {
      return {
        isQuick: true,
        response: `¬°Hola! üëã Soy Pablo, pero puedes decirme EKLISTA.

Me dedico al dise√±o web y desarrollo aqu√≠ en Guatemala. Me encanta ayudar a empresarios y emprendedores a crear sus proyectos digitales.

¬øEn qu√© est√°s trabajando? ¬øTienes alg√∫n proyecto en mente o hay algo espec√≠fico que te gustar√≠a saber sobre lo que hago?`
      };
    }

    // Solo dar respuestas r√°pidas muy espec√≠ficas, el resto que vaya a AI
    return null; // Dejar que AI maneje casi todo
  }

  // Clasificar el tipo de consulta para mejor contexto
  classifyIntent(message) {
    const msg = message.toLowerCase();
    
    if (msg.includes('precio') || msg.includes('costo') || msg.includes('cuanto')) {
      return 'pricing';
    }
    if (msg.includes('servicio') || msg.includes('qu√© haces')) {
      return 'services';
    }
    if (msg.includes('portfolio') || msg.includes('trabajo') || msg.includes('proyecto')) {
      return 'portfolio';
    }
    if (msg.includes('contacto') || msg.includes('email') || msg.includes('whatsapp')) {
      return 'contact';
    }
    if (msg.includes('cotiz') || msg.includes('presupuesto')) {
      return 'quote';
    }
    
    return 'general';
  }

  // Respuesta principal con Groq
  async respond(userMessage) {
    try {
      // 1. Verificar respuestas r√°pidas primero
      const quickResponse = this.getQuickResponse(userMessage);
      if (quickResponse?.isQuick) {
        return {
          content: quickResponse.response,
          source: 'quick',
          success: true
        };
      }

      // 2. Si Groq no est√° disponible, usar respuestas predefinidas mejoradas
      if (!this.isInitialized || !this.groq) {
        return {
          content: this.getFallbackResponse(userMessage),
          source: 'fallback',
          success: true
        };
      }

      // 3. Usar Groq para respuestas m√°s complejas
      const intent = this.classifyIntent(userMessage);
      const systemPrompt = this.buildSystemPrompt();
      
      // A√±adir contexto espec√≠fico seg√∫n el intent
      const contextualPrompt = this.addContextForIntent(intent, systemPrompt);

      const completion = await this.groq.chat.completions.create({
        messages: [
          { role: "system", content: contextualPrompt },
          { role: "user", content: userMessage }
        ],
        model: "llama3-70b-8192", // Modelo m√°s potente
        temperature: 0.7, // Balance entre creatividad y consistencia
        max_tokens: 400,
        top_p: 0.9
      });

      const response = completion.choices[0]?.message?.content;
      
      if (!response) {
        throw new Error('No response from Groq');
      }

      return {
        content: response,
        source: 'groq',
        success: true
      };

    } catch (error) {
      console.error('Error en Groq Chat AI:', error);
      
      return {
        content: this.getFallbackResponse(userMessage),
        source: 'fallback',
        success: false,
        error: error.message
      };
    }
  }

  addContextForIntent(intent, basePrompt) {
    const contextAdditions = {
      pricing: `\n\nCONTEXTO: El usuario pregunta sobre precios. IMPORTANTE: NO menciones el cotizador inmediatamente. Primero pregunta qu√© tipo de proyecto tienen en mente, qu√© funcionalidades necesitan, o para qu√© negocio es. Da rangos de precios y explica por qu√© var√≠an. Solo menciona el cotizador si insisten en un precio exacto.`,
      
      services: `\n\nCONTEXTO: El usuario quiere conocer servicios. Pregunta espec√≠ficamente qu√© tipo de proyecto tienen en mente o qu√© problema quieren resolver. No hagas una lista de servicios - conversa sobre qu√© necesita.`,
      
      portfolio: `\n\nCONTEXTO: El usuario est√° interesado en trabajos anteriores. Pregunta qu√© tipo de proyectos les interesan m√°s para poder mostrarles ejemplos relevantes.`,
      
      contact: `\n\nCONTEXTO: El usuario quiere informaci√≥n de contacto. Adem√°s de dar la info, pregunta si tienen alg√∫n proyecto espec√≠fico en mente para poder ayudarles mejor.`,
      
      quote: `\n\nCONTEXTO: El usuario quiere cotizaci√≥n. ANTES de mencionar el cotizador, pregunta sobre su proyecto: ¬øqu√© tipo de negocio?, ¬øqu√© funcionalidades?, ¬øtienen deadline?, etc. Solo despu√©s de 2-3 intercambios sugiere el cotizador.`,
      
      general: '\n\nCONTEXTO: Conversaci√≥n general. S√© consultivo y haz preguntas para entender mejor qu√© necesita el cliente.'
    };

    return basePrompt + (contextAdditions[intent] || contextAdditions.general);
  }

  // Respuesta de respaldo cuando Groq no est√° disponible
  getFallbackResponse(message) {
    const intent = this.classifyIntent(message);
    
    const fallbackResponses = {
      pricing: `Mis precios son muy competitivos para Guatemala:

üí∞ **Dise√±o Gr√°fico**: ${formatPrice(500)} - ${formatPrice(1500)}
üí∞ **Sitios WordPress**: ${formatPrice(1200)} - ${formatPrice(4000)}  
üí∞ **UX/UI Design**: ${formatPrice(800)} - ${formatPrice(2500)}
üí∞ **Desarrollo Custom**: ${formatPrice(4000)}+

Los precios var√≠an seg√∫n la complejidad del proyecto. ¬øQuieres una **cotizaci√≥n personalizada y exacta**?`,

      services: `¬°Perfecto! Te cuento sobre mis servicios principales:

üé® **Dise√±o Gr√°fico & Branding** - Desde ${formatPrice(500)}
‚Ä¢ Logos e identidad visual
‚Ä¢ Papeler√≠a corporativa  
‚Ä¢ Packaging y material promocional

üíª **Desarrollo Web** - Desde ${formatPrice(1200)}
‚Ä¢ Sitios WordPress personalizados
‚Ä¢ Aplicaciones React/Next.js
‚Ä¢ E-commerce y tiendas online

üéØ **UX/UI Design** - Desde ${formatPrice(800)}
‚Ä¢ Investigaci√≥n de usuarios
‚Ä¢ Prototipos interactivos
‚Ä¢ Interfaces web y m√≥vil

¬øTe interesa alg√∫n servicio en particular?`,

      portfolio: `¬°Excelente pregunta! üöÄ Tengo m√°s de 50 proyectos completados.

**Algunos destacados:**
‚Ä¢ Banking App UI/UX - Interfaz moderna para fintech
‚Ä¢ E-commerce Platform - Tienda completa con +250% en ventas
‚Ä¢ Restaurant Website - Sistema de reservas que aument√≥ bookings +400%

Para ver **todos los detalles, mockups y casos de estudio**, explora las carpetas del escritorio haciendo doble clic. Est√°n organizadas por categor√≠a.

¬øHay alg√∫n tipo de proyecto que te llame m√°s la atenci√≥n?`,

      contact: `¬°Perfecto! Aqu√≠ tienes toda mi informaci√≥n:

üìß **Email**: hello@eklista.com
üì± **WhatsApp**: +502 1234-5678
üíº **LinkedIn**: /in/eklista
üêô **GitHub**: @eklista
üìç **Ubicaci√≥n**: Guatemala City, GT

Prefiero **WhatsApp** para una respuesta m√°s r√°pida. ¬øCu√°l es la mejor forma de contactarte?`,

      quote: `¬°Excelente! Te voy a explicar sobre el cotizador personalizado:

‚ú® **¬øQu√© incluye?**
‚Ä¢ Selecci√≥n de tipo de proyecto
‚Ä¢ Caracter√≠sticas personalizables  
‚Ä¢ Servicios adicionales opcionales
‚Ä¢ Cotizaci√≥n instant√°nea y detallada

El cotizador te tomar√° solo **2 minutos** y tendr√°s un precio exacto al final.

¬øEst√°s listo para empezar? Puedo abrirte el cotizador ahora mismo.`,

      general: `Gracias por contactarme. Soy Pablo, tambi√©n conocido como **EKLISTA**.

Soy dise√±ador gr√°fico y desarrollador web con **5+ a√±os de experiencia** creando soluciones digitales para empresas en Guatemala y el extranjero.

**¬øEn qu√© puedo ayudarte hoy?**
‚Ä¢ Ver mis servicios y precios
‚Ä¢ Explorar mi portfolio de proyectos
‚Ä¢ Obtener una cotizaci√≥n personalizada
‚Ä¢ Informaci√≥n de contacto

¬øHay algo espec√≠fico que te interese?`
    };

    return fallbackResponses[intent] || fallbackResponses.general;
  }

  // M√©todo para verificar si el servicio est√° disponible
  isAvailable() {
    return this.isInitialized && this.groq !== null;
  }

  // M√©todo para obtener estad√≠sticas (opcional)
  getStats() {
    return {
      initialized: this.isInitialized,
      hasApiKey: !!import.meta.env.VITE_GROQ_API_KEY,
      quickResponsesCount: 8 // N√∫mero de respuestas r√°pidas definidas
    };
  }
}

// Singleton para usar en toda la aplicaci√≥n
const chatAI = new EklistaChatAI();

export default chatAI;